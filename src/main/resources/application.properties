server.port=9001
spring.application.name=springbootdemo-sharding
#项目访问路径
server.servlet.context-path=/springbootdemo-sharding
##允许定义相同名称的bean
spring.main.allow-bean-definition-overriding=true


############shardingjdbc   读写分离（要实现数据库间的主从复制配置    mysql通过bin_log）################################
####配置数据源
sharding.jdbc.datasource.names=ds0,ds1
sharding.jdbc.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.ds0.url=jdbc:mysql://127.0.0.1:3306/testdb_master?serverTimezone=GMT
sharding.jdbc.datasource.ds0.username=root
sharding.jdbc.datasource.ds0.password=root

sharding.jdbc.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.ds1.url=jdbc:mysql://127.0.0.1:3306/testdb_slave1?serverTimezone=GMT
sharding.jdbc.datasource.ds1.username=root
sharding.jdbc.datasource.ds1.password=root

sharding.jdbc.config.masterslave.name=dataSource
#主数据库  (事务性操作，增删改)
sharding.jdbc.config.masterslave.master-data-source-name=ds0
##多个从数据库用逗号隔开 (非事务性操作，查)
sharding.jdbc.config.masterslave.slave-data-source-names=ds1
#sharding.jdbc.config.sharding.master-slave-rules.<master-slave-data-source-name>.load-balance-algorithm-class-name= #从库负载均衡算法类名称。该类需实现MasterSlaveLoadBalanceAlgorithm接口且提供无参数构造器
 #从库负载均衡算法类型，可选值：ROUND_ROBIN，RANDOM。若`load-balance-algorithm-class-name`存在则忽略该配置
sharding.jdbc.config.masterslave.load-balance-algorithm-type=ROUND_ROBIN 



#################mybatis-plus###################################################
mybatis-plus.mapper-locations=classpath:mapper/*.xml
#实体扫描，多个package用逗号或者分号分隔
mybatis-plus.type-aliases-package=com.example.sharding.entity
